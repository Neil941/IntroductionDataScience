#INTALACIÓN DE PAQUETES

install.packages("curl", dependencies = TRUE)
install.packages("ggplot2")
install.packages("swirl")
install.packages("lattice")
install.packages("car")
install.packages("fImport")
install.packages("tseries")
install.packages("curl", dependencies = TRUE)
install.packages("httr", dependencies = TRUE)
install.packages("swirl", dependencies = TRUE)
install_course_github("ifunam", "programacion-estadistica-r")

library(swirl)

select_language()
#1: chinese_simplified
#2: dutch
#3: english
#4: french
#5: german
#6: german_formal
#7: korean
#8: portuguese
#9: spanish
#10: turkish

# Seleccione el idioma

9

install_course_github("ifunam", "programacion-estadistica-r")

Sys.setlocale("LC_ALL", "en_US.UTF-8")

swirl()
#Eliminar la lista asignada

#¡Hola! Veo que tienes algunas variables guardadas en tu espacio de
#trabajo. Para que todo funcione bien, te recomiendo que limpies antes 
#de iniciar swirl.

#Teclea ls() para ver un listado de las variables en tu espacio de trabajo.
#Luego, teclea rm(list=ls()) para limpiar todos los objetos de tu espacio 
#de trabajo.

#Teclea swirl() cuando estés listo para empezar.

ls()

rm(list = ls())

#Comieza con swirl

swirl()

#¡Bienvenido a swirl! Por favor, inicia sesión. Si ya has estado aquí
#antes, ingresa el mismo nombre de usuario que usaste la última vez. Si es
#tu primera vez aquí, elige un nombre corto (cada vez que arranques swirl,
#tendrás que ingresar este nombre).

#Escribe tu nombre

Neil Camones

#¿Quisieras reanudar alguna de estas lecciones?
#1: R Programming Basic Building Blocks
#2: No. Déjame iniciar con algo nuevo.

2

#Por favor escoge un curso o teclea 0 para salir de swirl.

#1: ifunam-programacion-estadistica-r-30a0648
#2: programacion-estadistica-r
#3: R Programming
#4: ¡Llévame al depósito de cursos swirl!

2

#Selecciona una lección por favor, o teclea 0 para volver al menú del curso.

#1: Obtener Ayuda
#2: Objetos Tipos de Datos y Operaciones Basicas
#3: Subconjuntos de Datos
#4: Leer y escribir Datos
#5: Funciones
#6: Funciones apply
#7: Graficacion
#8: Parametros en el Sistema de Graficos
#9: Colores en el Sistema de Graficos
#10: Graficacion con texto y notacion matematica
#11: Creacion de Graficas en 3D
#12: Expresiones regulares
#13: Graficacion con ggplot2
#14: Simulacion

1

#En esta lección conocerás las principales herramientas que R tiene para
#obtener ayuda.

CTRL+ENTER

#La primera herramienta que puedes usar para obtener ayuda es help.start().
#En ella encontrarás un menú de recursos, entre los cuales se encuentran
#manuales, referencias y demás material para comenzar a aprender R.

CTRL+ENTER

#Para usar help.start() escribe en la línea de comandos help.start().
#Pruébalo ahora:

help.start()

#If nothing happens, you should open
#‘http://127.0.0.1:15250/doc/html/index.html’ yourself

#¡Eso es trabajo bien hecho!
  
 
#R incluye un sistema de ayuda que te facilita obtener información acerca
#de las funciones de los paquetes instalados. Para obtener información
#acerca de una función, por ejemplo de la función print(), debes escribir
#?print en la línea de comandos.

CTRL + ENTER

#Ahora es tu turno, introduce ?print en la línea de comandos.

?print


#¡Toda esa práctica está rindiendo frutos!
  
#Como puedes observar ? te muestra en la ventana Help una breve descripción
#de la función, de cómo usarla, así como sus argumentos, etcétera.

CTRL + ENTER

#Asimismo, puedes usar la función help(), la cual es un equivalente de ?.
#Al utilizar help(), usarás como argumento el nombre de la función entre
#comillas, por ejemplo, help("print").

CTRL + ENTER

#Para buscar ayuda sobre un operador, éste tiene que encontrarse entre
#comillas inversas. Por ejemplo, si buscas información del operador +,
#deberás escribir help(`+`) o ?`+` en la línea de comandos.

CTRL + ENTER


#Otra herramienta disponible es la función apropos(), la cual recibe una
#cadena entre comillas como argumento y te muestra una lista de todas las
#funciones que contengan esa cadena. Inténtalo: escribe apropos("class") en
#la línea de comandos.

apropos("class")

#[1] ".checkMFClasses"                ".class2"                       
#[3] ".classEnv"                      ".MFclass"                      
#[5] ".OldClassesList"                ".rs.getR6ClassGeneratorMethod" 
#[7] ".rs.getR6ClassSymbols"          ".rs.getSetRefClassSymbols"     
#[9] ".rs.getSingleClass"             ".rs.objectClass"               
#[11] ".rs.rnb.engineToCodeClass"      ".rs.rpc.get_set_class_slots"   
#[13] ".rs.rpc.get_set_ref_class_call" ".selectSuperClasses"           
#[15] ".valueClassTest"                "all.equal.envRefClass"         
#[17] "assignClassDef"                 "class"                         
#[19] "class<-"                        "classesToAM"                   
#[21] "classLabel"                     "classMetaName"                 
#[23] "className"                      "completeClassDefinition"       
#[25] "completeSubclasses"             "data.class"                    
#[27] "findClass"                      "getAllSuperClasses"            
#[29] "getClass"                       "getClassDef"                   
#[31] "getClasses"                     "getRefClass"                   
#[33] "insertClassMethods"             "isClass"                       
#[35] "isClassDef"                     "isClassUnion"                  
#[37] "isSealedClass"                  "isVirtualClass"                
#[39] "isXS3Class"                     "makeClassRepresentation"       
#[41] "makePrototypeFromClassDef"      "multipleClasses"               
#[43] "namespaceImportClasses"         "nclass.FD"                     
#[45] "nclass.scott"                   "nclass.Sturges"                
#[47] "newClassRepresentation"         "oldClass"                      
#[49] "oldClass<-"                     "promptClass"                   
#[51] "removeClass"                    "resetClass"                    
#[53] "S3Class"                        "S3Class<-"                     
#[55] "sealClass"                      "selectSuperClasses"            
#[57] "setClass"                       "setClassUnion"                 
#[59] "setOldClass"                    "setRefClass"                   
#[61] "showClass"                      "superClassDepth"               
#[63] "unclass" 

#¡Tu dedicación es inspiradora!
  
#También puedes obtener ejemplos del uso de funciones con la función
#example(). Por ejemplo, escribe example("read.table").

example("read.table")

#¡Eso es correcto!
  
#Con eso tendrás una idea de lo que puedes hacer con esta función.

CTRL + ENTER

#R te permite buscar información sobre un tema usando ??. Por ejemplo,
#escribe ??regression en la línea de comandos.

??regression

#¡Excelente trabajo!
  
#Esta herramienta es muy útil si no recuerdas el nombre de una función, ya
#que R te mostrará una lista de temas relevantes en la venta Help.
#Análogamente, puedes usar la función help.search("regression").

CTRL + ENTER

#Otra manera de obtener información de ayuda sobre un paquete es usar la
#opción help para el comando library, con lo cual tendrás información más
#completa. Un ejemplo es library(help="stats").

library(help="stats")

#Algunos paquetes incluyen viñetas. Una viñeta es un documento corto que
#describe cómo se usa un paquete. Puedes ver una viñetas usando la función
#vignette(). Pruébalo: escribe vignette("tests") en la línea de comandos.

vignette("tests")

#¡Excelente trabajo!
  
#Por último si deseas ver la lista de viñetas disponibles puedes hacerlo
#usando el comando vignette() con los paréntesis vacíos.

vignette()

#Es MUY IMPORTANTE que sepas que durante todo el curso en swirl, puedes
#hacer uso de las funciones help() o ? cuando lo desees, incluso si estas
#en medio de una lección.

CTRL + ENTER

1

#Has concluido la lección. ¿Te gustaría que se le notificará a Coursera que
#has completado esta lección?
#1: Si
#2: No

1

#Â¿CÃºal es tu nombre de usuario registrado en Coursera (email)? 

djcamones@gmail.com

#Â¿CÃºal es tu token de la tarea?

UNAy1FgPCKIGBrDk

#Â¡El envÃ­o de la calificaciÃ³n fue satisfactorio!
  
#Sigue trabajando de esa manera y llegarás lejos!
  
#¡Has alcanzado el fin de esta lección! Volviendo al menú principal...

#¿Quisieras reanudar alguna de estas lecciones?

2

#Escoger el curso para que pueda continuar

2

#Seleccionar la lección que desee continuar

2

#En esta lección conocerás los tipos de datos que existen en el lenguaje R,
#además de las operaciones básicas que puedes hacer con ellos.

CTRL + ENTER

#Cuando introduces una expresión en la línea de comandos y das ENTER, R
#evalúa la expresión y muestra el resultado (si es que existe uno). R puede
#ser usado como una calculadora, ya que realiza operaciones aritméticas,
#además de operaciones lógicas.

CTRL + ENTER

#Pruébalo: ingresa 3 + 7 en la línea de comandos.

3 + 7